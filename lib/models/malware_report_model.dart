import 'package:hive/hive.dart';
part 'malware_report_model.g.dart';

@HiveType(typeId: 2)
class MalwareReportModel extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String malwareType;

  @HiveField(2)
  String infectedDeviceType;

  @HiveField(3)
  String operatingSystem;

  @HiveField(4)
  String detectionMethod;

  @HiveField(5)
  String location;

  @HiveField(6)
  String fileName;

  @HiveField(7)
  String name;

  @HiveField(8)
  String systemAffected;

  @HiveField(9)
  String alertSeverityLevel;

  @HiveField(10)
  DateTime date;

  @HiveField(11)
  bool isSynced;

  @HiveField(12)
  String? keycloakUserId; // Keycloak user ID from JWT token sub field

  // New fields to match backend payload structure
  @HiveField(13)
  String? reportCategoryId;

  @HiveField(14)
  String? reportTypeId;

  @HiveField(15)
  String? alertLevels;

  @HiveField(16)
  String? deviceTypeId;

  @HiveField(17)
  String? detectTypeId;

  @HiveField(18)
  String? operatingSystemName;

  @HiveField(19)
  String? attackName;

  @HiveField(20)
  String? attackSystem;

  @HiveField(21)
  String? createdBy;

  @HiveField(22)
  bool? isActive;

  @HiveField(23)
  DateTime? createdAt;

  @HiveField(24)
  DateTime? updatedAt;

  @HiveField(25)
  int? version;

  // File upload fields
  @HiveField(26)
  List<String>? screenshotUrls;

  @HiveField(27)
  List<String>? voiceMessageUrls;

  @HiveField(28)
  List<String>? documentUrls;

  // Additional fields from payload structure
  @HiveField(29)
  String? description;

  @HiveField(31)
  DateTime? incidentDate;

  @HiveField(32)
  bool? reportOutcome;

  @HiveField(33)
  Map<String, dynamic>? locationCoordinates;

  @HiveField(34)
  List<String>? screenshots;

  @HiveField(35)
  List<String>? voiceMessages;

  @HiveField(36)
  List<String>? documents;

  // Age range fields
  @HiveField(37)
  int? minAge;

  @HiveField(38)
  int? maxAge;

  MalwareReportModel({
    required this.id,
    required this.malwareType,
    required this.infectedDeviceType,
    required this.operatingSystem,
    required this.detectionMethod,
    required this.location,
    required this.fileName,
    required this.name,
    required this.systemAffected,
    required this.alertSeverityLevel,
    required this.date,
    this.isSynced = false,
    this.keycloakUserId,
    this.reportCategoryId,
    this.reportTypeId,
    this.alertLevels,
    this.deviceTypeId,
    this.detectTypeId,
    this.operatingSystemName,
    this.attackName,
    this.attackSystem,
    this.createdBy,
    this.isActive,
    this.createdAt,
    this.updatedAt,
    this.version,
    this.screenshotUrls,
    this.voiceMessageUrls,
    this.documentUrls,
    this.description,
    this.incidentDate,
    this.reportOutcome,
    this.locationCoordinates,
    this.screenshots,
    this.voiceMessages,
    this.documents,
    this.minAge,
    this.maxAge,
  });

  Map<String, dynamic> toJson() => {
    'id': id,
    'malwareType': malwareType,
    'infectedDeviceType': infectedDeviceType,
    'operatingSystem': operatingSystem,
    'detectionMethod': detectionMethod,
    'location': location,
    'fileName': fileName,
    'name': name,
    'systemAffected': systemAffected,
    'alertSeverityLevel': alertSeverityLevel,
    'date': date.toIso8601String(),
    'isSynced': isSynced,
    'keycloackUserId': keycloakUserId,
    'reportCategoryId': reportCategoryId,
    'reportTypeId': reportTypeId,
    'alertLevels': alertLevels,
    'deviceTypeId': deviceTypeId,
    'detectTypeId': detectTypeId,
    'operatingSystemName': operatingSystemName,
    'attackName': attackName,
    'attackSystem': attackSystem,
    'createdBy': createdBy,
    'isActive': isActive,
    'createdAt': createdAt?.toIso8601String(),
    'updatedAt': updatedAt?.toIso8601String(),
    '__v': version,
    'screenshotUrls': screenshotUrls ?? [],
    'voiceMessageUrls': voiceMessageUrls ?? [],
    'documentUrls': documentUrls ?? [],
    'description': description,
    'incidentDate': incidentDate?.toIso8601String(),
    'reportOutcome': reportOutcome,
    'locationCoordinates': locationCoordinates,
    'screenshots': screenshots ?? [],
    'voiceMessages': voiceMessages ?? [],
    'documents': documents ?? [],
    'age': {'min': minAge, 'max': maxAge},
  };

  static MalwareReportModel fromJson(Map<String, dynamic> json) =>
      MalwareReportModel(
        id: json['id'] as String,
        malwareType: json['malwareType'] as String,
        infectedDeviceType: json['infectedDeviceType'] as String,
        operatingSystem: json['operatingSystem'] as String,
        detectionMethod: json['detectionMethod'] as String,
        location: json['location'] as String,
        fileName: json['fileName'] as String,
        name: json['name'] as String,
        systemAffected: json['systemAffected'] as String,
        alertSeverityLevel: json['alertSeverityLevel'] as String,
        date: DateTime.parse(json['date'] as String),
        isSynced: json['isSynced'] as bool? ?? false,
        keycloakUserId: json['keycloackUserId'],
        reportCategoryId: json['reportCategoryId'] as String?,
        reportTypeId: json['reportTypeId'] as String?,
        alertLevels: json['alertLevels'] as String?,
        deviceTypeId: json['deviceTypeId'] as String?,
        detectTypeId: json['detectTypeId'] as String?,
        operatingSystemName: json['operatingSystemName'] as String?,
        attackName: json['attackName'] as String?,
        attackSystem: json['attackSystem'] as String?,
        createdBy: json['createdBy'] as String?,
        isActive: json['isActive'] as bool?,
        createdAt: json['createdAt'] != null
            ? DateTime.parse(json['createdAt'] as String)
            : null,
        updatedAt: json['updatedAt'] != null
            ? DateTime.parse(json['updatedAt'] as String)
            : null,
        version: json['__v'] as int?,
        screenshotUrls: json['screenshotUrls'] != null
            ? List<String>.from(json['screenshotUrls'])
            : null,
        voiceMessageUrls: json['voiceMessageUrls'] != null
            ? List<String>.from(json['voiceMessageUrls'])
            : null,
        documentUrls: json['documentUrls'] != null
            ? List<String>.from(json['documentUrls'])
            : null,
        description: json['description'] as String?,
        incidentDate: json['incidentDate'] != null
            ? DateTime.parse(json['incidentDate'] as String)
            : null,
        reportOutcome: json['reportOutcome'] as bool?,
        locationCoordinates:
            json['locationCoordinates'] as Map<String, dynamic>?,
        screenshots: json['screenshots'] != null
            ? List<String>.from(json['screenshots'])
            : null,
        voiceMessages: json['voiceMessages'] != null
            ? List<String>.from(json['voiceMessages'])
            : null,
        documents: json['documents'] != null
            ? List<String>.from(json['documents'])
            : null,
        minAge: json['age'] != null ? json['age']['min'] : null,
        maxAge: json['age'] != null ? json['age']['max'] : null,
      );

  MalwareReportModel copyWith({
    String? id,
    String? malwareType,
    String? infectedDeviceType,
    String? operatingSystem,
    String? detectionMethod,
    String? location,
    String? fileName,
    String? name,
    String? systemAffected,
    String? alertSeverityLevel,
    DateTime? date,
    bool? isSynced,
    String? keycloakUserId,
    String? reportCategoryId,
    String? reportTypeId,
    String? alertLevels,
    String? deviceTypeId,
    String? detectTypeId,
    String? operatingSystemName,
    String? attackName,
    String? attackSystem,
    String? createdBy,
    bool? isActive,
    DateTime? createdAt,
    DateTime? updatedAt,
    int? version,
    List<String>? screenshotUrls,
    List<String>? voiceMessageUrls,
    List<String>? documentUrls,
    String? description,
    DateTime? incidentDate,
    bool? reportOutcome,
    Map<String, dynamic>? locationCoordinates,
    List<String>? screenshots,
    List<String>? voiceMessages,
    List<String>? documents,
    int? minAge,
    int? maxAge,
  }) {
    return MalwareReportModel(
      id: id ?? this.id,
      malwareType: malwareType ?? this.malwareType,
      infectedDeviceType: infectedDeviceType ?? this.infectedDeviceType,
      operatingSystem: operatingSystem ?? this.operatingSystem,
      detectionMethod: detectionMethod ?? this.detectionMethod,
      location: location ?? this.location,
      fileName: fileName ?? this.fileName,
      name: name ?? this.name,
      systemAffected: systemAffected ?? this.systemAffected,
      alertSeverityLevel: alertSeverityLevel ?? this.alertSeverityLevel,
      date: date ?? this.date,
      isSynced: isSynced ?? this.isSynced,
      keycloakUserId: keycloakUserId ?? this.keycloakUserId,
      reportCategoryId: reportCategoryId ?? this.reportCategoryId,
      reportTypeId: reportTypeId ?? this.reportTypeId,
      alertLevels: alertLevels ?? this.alertLevels,
      deviceTypeId: deviceTypeId ?? this.deviceTypeId,
      detectTypeId: detectTypeId ?? this.detectTypeId,
      operatingSystemName: operatingSystemName ?? this.operatingSystemName,
      attackName: attackName ?? this.attackName,
      attackSystem: attackSystem ?? this.attackSystem,
      createdBy: createdBy ?? this.createdBy,
      isActive: isActive ?? this.isActive,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      version: version ?? this.version,
      screenshotUrls: screenshotUrls ?? this.screenshotUrls,
      voiceMessageUrls: voiceMessageUrls ?? this.voiceMessageUrls,
      documentUrls: documentUrls ?? this.documentUrls,
      description: description ?? this.description,
      incidentDate: incidentDate ?? this.incidentDate,
      reportOutcome: reportOutcome ?? this.reportOutcome,
      locationCoordinates: locationCoordinates ?? this.locationCoordinates,
      screenshots: screenshots ?? this.screenshots,
      voiceMessages: voiceMessages ?? this.voiceMessages,
      documents: documents ?? this.documents,
      minAge: minAge ?? this.minAge,
      maxAge: maxAge ?? this.maxAge,
    );
  }
}
